{"ast":null,"code":"var _jsxFileName = \"/Users/abhijitharihara/Downloads/japanese-menu-main/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport MenuItem from './components/MenuItem';\nimport JapaneseRestaurant from './components/JapaneseRestaurant';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\n\n// Menu data. An array of objects where each object represents a menu item. Each menu item has an id, title, description, image name, and price.\n// You can use the image name to get the image from the images folder.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = [{\n  id: 1,\n  title: 'Gyoza',\n  description: 'Japanese dumplings',\n  imageName: 'gyoza.png',\n  price: 5.99\n}, {\n  id: 2,\n  title: 'Sushi',\n  description: 'Japanese rice rolls',\n  imageName: 'sushi.png',\n  price: 6.99\n}, {\n  id: 3,\n  title: 'Ramen',\n  description: 'Japanese noodle soup',\n  imageName: 'ramen.png',\n  price: 7.99\n}, {\n  id: 4,\n  title: 'Matcha Cake',\n  description: 'Japanese green tea cake',\n  imageName: 'matcha-cake.png',\n  price: 4.99\n}, {\n  id: 5,\n  title: 'Mochi',\n  description: 'Japanese rice cake',\n  imageName: 'mochi.png',\n  price: 3.99\n}, {\n  id: 6,\n  title: 'Yakitori',\n  description: 'Japanese skewered chicken',\n  imageName: 'yakitori.png',\n  price: 2.99\n}, {\n  id: 7,\n  title: 'Takoyaki',\n  description: 'Japanese octopus balls',\n  imageName: 'takoyaki.png',\n  price: 5.99\n}, {\n  id: 8,\n  title: 'Sashimi',\n  description: 'Japanese raw fish',\n  imageName: 'sashimi.png',\n  price: 8.99\n}, {\n  id: 9,\n  title: 'Okonomiyaki',\n  description: 'Japanese savory pancake',\n  imageName: 'okonomiyaki.png',\n  price: 6.99\n}, {\n  id: 10,\n  title: 'Katsu Curry',\n  description: 'Japanese curry with fried pork',\n  imageName: 'katsu-curry.png',\n  price: 9.99\n}];\nfunction App() {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const addToCart = item => {\n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem => cartItem.id === item.id ? {\n        ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem));\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n    updateTotal();\n  };\n  const removeFromCart = itemId => {\n    const existingItem = cart.find(cartItem => cartItem.id === itemId);\n    if (existingItem.quantity > 1) {\n      setCart(cart.map(cartItem => cartItem.id === itemId ? {\n        ...cartItem,\n        quantity: cartItem.quantity - 1\n      } : cartItem));\n    } else {\n      setCart(cart.filter(cartItem => cartItem.id !== itemId));\n    }\n    updateTotal();\n  };\n  const clearCart = () => {\n    setCart([]);\n    setTotal(0);\n  };\n  const updateTotal = () => {\n    const newTotal = cart.reduce((acc, currentItem) => acc + currentItem.price * currentItem.quantity, 0);\n    setTotal(newTotal);\n  };\n  const handleOrder = () => {\n    // Implement order functionality (e.g., display a message with the total and items ordered)\n    console.log(\"Order placed:\", cart, \"Total:\", total);\n    // Optionally clear the cart\n    clearCart();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(JapaneseRestaurant, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n        id: item.id,\n        title: item.title,\n        description: item.description,\n        imageName: item.imageName,\n        price: item.price,\n        addToCart: () => addToCart(item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOrder,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCart,\n        children: \"Clear all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7rk9FDm0U5iLhz2ic5vTXjiTzGg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MenuItem","JapaneseRestaurant","React","useState","jsxDEV","_jsxDEV","menuItems","id","title","description","imageName","price","App","_s","cart","setCart","total","setTotal","addToCart","item","existingItem","find","cartItem","map","quantity","updateTotal","removeFromCart","itemId","filter","clearCart","newTotal","reduce","acc","currentItem","handleOrder","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Users/abhijitharihara/Downloads/japanese-menu-main/src/App.js"],"sourcesContent":["import './App.css';\nimport MenuItem from './components/MenuItem';\nimport JapaneseRestaurant from './components/JapaneseRestaurant';\nimport React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\n\n// Menu data. An array of objects where each object represents a menu item. Each menu item has an id, title, description, image name, and price.\n// You can use the image name to get the image from the images folder.\nconst menuItems = [\n  {\n    id: 1,\n    title: 'Gyoza',\n    description: 'Japanese dumplings',\n    imageName: 'gyoza.png',\n    price: 5.99,\n  },\n  {\n    id: 2,\n    title: 'Sushi',\n    description: 'Japanese rice rolls',\n    imageName: 'sushi.png',\n    price: 6.99,\n  },\n  {\n    id: 3,\n    title: 'Ramen',\n    description: 'Japanese noodle soup',\n    imageName: 'ramen.png',\n    price: 7.99,\n  },\n  {\n    id: 4,\n    title: 'Matcha Cake',\n    description: 'Japanese green tea cake',\n    imageName: 'matcha-cake.png',\n    price: 4.99,\n  },\n  {\n    id: 5,\n    title: 'Mochi',\n    description: 'Japanese rice cake',\n    imageName: 'mochi.png',\n    price: 3.99,\n  },\n  {\n    id: 6,\n    title: 'Yakitori',\n    description: 'Japanese skewered chicken',\n    imageName: 'yakitori.png',\n    price: 2.99,\n  },\n  {\n    id: 7,\n    title: 'Takoyaki',\n    description: 'Japanese octopus balls',\n    imageName: 'takoyaki.png',\n    price: 5.99,\n  },\n  {\n    id: 8,\n    title: 'Sashimi',\n    description: 'Japanese raw fish',\n    imageName: 'sashimi.png',\n    price: 8.99,\n  },\n  {\n    id: 9,\n    title: 'Okonomiyaki',\n    description: 'Japanese savory pancake',\n    imageName: 'okonomiyaki.png',\n    price: 6.99,\n  },\n  {\n    id: 10,\n    title: 'Katsu Curry',\n    description: 'Japanese curry with fried pork',\n    imageName: 'katsu-curry.png',\n    price: 9.99,\n  }\n];\n\n\nfunction App() {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const addToCart = (item) => {\n    const existingItem = cart.find(cartItem => cartItem.id === item.id);\n    if (existingItem) {\n      setCart(cart.map(cartItem =>\n        cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\n      ));\n    } else {\n      setCart([...cart, { ...item, quantity: 1 }]);\n    }\n    updateTotal();\n  };\n\n  const removeFromCart = (itemId) => {\n    const existingItem = cart.find(cartItem => cartItem.id === itemId);\n    if (existingItem.quantity > 1) {\n      setCart(cart.map(cartItem =>\n        cartItem.id === itemId ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\n      ));\n    } else {\n      setCart(cart.filter(cartItem => cartItem.id !== itemId));\n    }\n    updateTotal();\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setTotal(0);\n  };\n\n  const updateTotal = () => {\n    const newTotal = cart.reduce((acc, currentItem) => acc + currentItem.price * currentItem.quantity, 0);\n    setTotal(newTotal);\n  };\n\n  const handleOrder = () => {\n    // Implement order functionality (e.g., display a message with the total and items ordered)\n    console.log(\"Order placed:\", cart, \"Total:\", total);\n    // Optionally clear the cart\n    clearCart();\n  };\n  \n  return (\n    <div>\n      <JapaneseRestaurant />\n      <div className=\"menu\">\n        {menuItems.map(item => (\n          <MenuItem\n            key={item.id}\n            id={item.id}\n            title={item.title}\n            description={item.description}\n            imageName={item.imageName}\n            price={item.price}\n            addToCart={() => addToCart(item)}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <p>Total: ${total.toFixed(2)}</p>\n        <button onClick={handleOrder}>Order</button>\n        <button onClick={clearCart}>Clear all</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}